@* This program is free software. It comes without any warranty, to the extent
 * permitted by applicable law. You can redistribute it and/or modify it under
 * the terms of the Do What The Fuck You Want To Public License, Version 2, as
 * published by Sam Hocevar. See http://www.wtfpl.net/ for more details. *@

@page "/rings"
@inject IZoraGenDetails ZoraGenDetails

<div class="ring-buttons">
    <button class="btn btn-primary" onclick="@NoneButtonHandler">None</button>
    <button class="btn btn-primary" onclick="@AllButtonHandler">All</button>
</div>

<table class="table table-hover">
    @foreach (var (ring, ringName, name, description) in Utils.RingsList)
    {
        <tr>
            <td class="ring-checkbox">
                <div class="custom-control custom-checkbox">
                    <input type="checkbox" class="custom-control-input" id="@name" checked="@((SelectedRings & (long) ring) != 0 ? "checked" : null)" onchange="@(() => ChangeHandler((long) ring))" />
                    <label class="custom-control-label" for="@name"></label>
                </div>
            </td>
            <td class="ring-icon">
                <img alt="@name" src="@($"/img/rings/{ringName}.gif")" />
            </td>
            <td class="ring-name">
                @name
            </td>
            <td class="ring-desc">@description</td>
        </tr>
    }
</table>

@functions {
    private long selectedRings;

    protected override async Task OnInitAsync()
    {
        await ZoraGenDetails.InitAsync();
        selectedRings = (long) ZoraGenDetails.Rings;
    }

    long SelectedRings
    {
        get => selectedRings;
        set => ZoraGenDetails.Rings = (Zyrenth.Zora.Rings) (selectedRings = value);
    }

    void ChangeHandler(long ring)
    {
        SelectedRings ^= ring;
    }

    void NoneButtonHandler()
    {
        SelectedRings = 0;
    }

    void AllButtonHandler()
    {
        SelectedRings = unchecked((long) ulong.MaxValue);
    }
}
